---
toc: true
editor: 
  markdown: 
    wrap: 72
---

# R Basics

## Basic Calculator

R can be used as a calculator. Enter the following in the console.

```{r}
2 + 2*sin(pi)
```

## Assign a variable

When we assign a value to a variable, it is better to use \<- as below.

```{r}
n <- 20
x <- 3^2
```

Now you can click on environment (top right panel) to see the variables.

You will make lots of assignments, and \<- can be annoying to type. You
can save time with RStudio's keyboard shortcut: Alt & - (the minus
sign). Notice that RStudio automatically surrounds \<- with spaces,
which is a good code formatting practice.

## Basic R workspace functions

| command                        | usage                                           |
|:----------------------------|:------------------------------------------|
| rm(x)                          | remove variable x                               |
| rm(list = ls())                | remove all variables in the current environment |
| getwd()                        | list the current working directory              |
| setwd("/home/username/folder") | change current working directory                |
| cat("\\014")                   | clears console (same as ctrl + l)               |
| help(mean)                     |                                                 |

The \# symbol begins a comment. These will be used regularly to notate
the action immediately below the comment. If a commented line is run in
the R console, nothing will happen.

You can use another keyboard shortcut to help you fix it. For example,
you can press ↑ to bring the last command you typed and edit it. Or,
type "this" then press Cmd/Ctrl + ↑ to list all the commands you've
typed that start with those letters. Use the arrow keys to navigate,
then press enter to retype the command.

## Structures in R

There are several types of structures (or variable types) in R.

### Vector: a one dimensional array of numeric value

The following defines a vector in R.

```{r}
x <- c(3,-1,-3,5,2)
x
```

In R, the indexing starts at 1. Get the 4th coordinate of x:

```{r}
x[4]
```

Get the first 3 coordinates of x

```{r}
x[1:3]
```

Get the 1st, 2nd, and 5th coordinates

```{r}
x[c(1,2,5)]
```

Get all coordinates but the 3rd

```{r}
x[-3]
```

```{r}
seq(from = 1, to = 10)
```

And basic arithmetic on vectors is applied to every element of of the
vector

x\*y

## Coding Style
my_variable

Put spaces on either side of mathematical operators and the assignment operator

## Read/save files

read_csv creates a tibble. read.csv creates a regular data frame.

```{r}

```

## Basic charts

```{r}
#ggplot(penguins, aes(x = species)) +
  #geom_bar()
```
